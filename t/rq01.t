# Before `make install' is performed this script should be runnable with
# `make test'. After `make install' it should work as `perl test.pl'

######################### We start with some black magic to print on failure.

# Change 1..1 below to 1..last_test_to_print .
# (It may become useful if the test is moved to ./t subdirectory.)

BEGIN { $| = 1; print "1..5\n"; };
END {print "not ok 1\n" unless $loaded;}
use Games::Maze;
$loaded = 1;
print "ok 1\n";

######################### End of black magic.

# Insert your test code below (better if it prints "ok 13"
# (correspondingly "not ok 13") depending on the success of chunk 13
# of the test code):

my $correct_make = 
q(:  :--:--:--:--:--:--:--:--:--:--:--:  
|     |                             |  
:  :  :  :--:--:--:--:--:--:--:--:  :  
|  |  |  |     |     |     |     |  |  
:  :  :  :  :  :  :  :  :  :  :  :  :  
|  |  |  |  |  |  |  |  |  |  |  |  |  
:  :  :  :  :  :  :  :  :  :  :  :  :  
|  |  |  |  |  |  |  |  |  |  |  |  |  
:  :  :  :  :  :  :  :  :  :  :  :  :  
|  |  |  |  |  |  |  |  |  |  |  |  |  
:  :  :  :  :  :  :  :  :  :  :  :  :  
|  |  |  |  |  |  |  |  |  |  |  |  |  
:--:  :  :  :  :  :  :  :  :  :  :  :  
|f    |     |     |     |     |  |f |  
:--:--:--:--:--:--:--:--:--:--:--:--:  

:--:--:--:--:--:--:--:--:--:--:--:--:  
|     |     |     |     |     |     |  
:  :  :  :  :  :  :  :  :  :  :  :  :  
|  |  |  |  |  |  |  |  |  |  |  |  |  
:  :  :  :  :  :  :  :  :  :  :  :  :  
|  |  |  |  |  |  |  |  |  |  |  |  |  
:  :  :  :  :  :  :  :  :  :  :  :  :  
|  |  |  |  |  |  |  |  |  |  |  |  |  
:  :  :  :  :  :  :  :  :  :  :  :  :  
|  |  |  |  |  |  |  |  |  |  |  |  |  
:  :  :  :  :  :  :  :  :  :  :  :  :  
|  |  |  |  |  |  |  |  |  |  |  |  |  
:  :  :  :  :  :  :  :  :  :  :  :  :  
|b |     |     |     |     |     |c |  
:--:--:--:--:--:--:--:--:--:--:--:--:  

:--:--:--:--:--:--:--:--:--:--:--:--:  
|     |     |     |     |     |     |  
:  :  :  :  :  :  :  :  :  :  :  :  :  
|  |  |  |  |  |  |  |  |  |  |  |  |  
:  :  :  :  :  :  :  :  :  :  :  :  :  
|  |  |  |  |  |  |  |  |  |  |  |  |  
:  :  :  :  :  :  :  :  :  :  :  :  :  
|  |  |  |  |  |  |  |  |  |  |  |  |  
:  :  :  :  :  :  :  :  :  :  :  :  :  
|  |  |  |  |  |  |  |  |  |  |  |  |  
:  :  :  :  :  :  :  :  :  :  :  :  :  
|  |  |  |  |  |  |  |  |  |  |  |  |  
:  :  :  :  :  :  :  :  :  :  :  :  :  
|c |     |     |     |     |     |  |  
:--:--:--:--:--:--:--:--:--:--:--:  :  
);

my $correct_solve = 
q(:  :--:--:--:--:--:--:--:--:--:--:--:  
| *  *|                             |  
:  :  :  :--:--:--:--:--:--:--:--:  :  
|  | *|  |     |     |     |     |  |  
:  :  :  :  :  :  :  :  :  :  :  :  :  
|  | *|  |  |  |  |  |  |  |  |  |  |  
:  :  :  :  :  :  :  :  :  :  :  :  :  
|  | *|  |  |  |  |  |  |  |  |  |  |  
:  :  :  :  :  :  :  :  :  :  :  :  :  
|  | *|  |  |  |  |  |  |  |  |  |  |  
:  :  :  :  :  :  :  :  :  :  :  :  :  
|  | *|  |  |  |  |  |  |  |  |  |  |  
:--:  :  :  :  :  :  :  :  :  :  :  :  
|f*  *|     |     |     |     |  |f |  
:--:--:--:--:--:--:--:--:--:--:--:--:  

:--:--:--:--:--:--:--:--:--:--:--:--:  
|     |     |     |     |     |     |  
:  :  :  :  :  :  :  :  :  :  :  :  :  
|  |  |  |  |  |  |  |  |  |  |  |  |  
:  :  :  :  :  :  :  :  :  :  :  :  :  
|  |  |  |  |  |  |  |  |  |  |  |  |  
:  :  :  :  :  :  :  :  :  :  :  :  :  
|  |  |  |  |  |  |  |  |  |  |  |  |  
:  :  :  :  :  :  :  :  :  :  :  :  :  
|  |  |  |  |  |  |  |  |  |  |  |  |  
:  :  :  :  :  :  :  :  :  :  :  :  :  
|  |  |  |  |  |  |  |  |  |  |  |  |  
:  :  :  :  :  :  :  :  :  :  :  :  :  
|b*|     |     |     |     |     |c |  
:--:--:--:--:--:--:--:--:--:--:--:--:  

:--:--:--:--:--:--:--:--:--:--:--:--:  
| *  *| *  *| *  *| *  *| *  *| *  *|  
:  :  :  :  :  :  :  :  :  :  :  :  :  
| *| *| *| *| *| *| *| *| *| *| *| *|  
:  :  :  :  :  :  :  :  :  :  :  :  :  
| *| *| *| *| *| *| *| *| *| *| *| *|  
:  :  :  :  :  :  :  :  :  :  :  :  :  
| *| *| *| *| *| *| *| *| *| *| *| *|  
:  :  :  :  :  :  :  :  :  :  :  :  :  
| *| *| *| *| *| *| *| *| *| *| *| *|  
:  :  :  :  :  :  :  :  :  :  :  :  :  
| *| *| *| *| *| *| *| *| *| *| *| *|  
:  :  :  :  :  :  :  :  :  :  :  :  :  
|c*| *  *| *  *| *  *| *  *| *  *| *|  
:--:--:--:--:--:--:--:--:--:--:--:  :  
);

my $correct_hex =
q( 0085 00a5 0085 0085 0085 0085 0085 0085 0085 0085 0085 0085 0085 00a5
 00a5 80a1 8024 00a0 0084 0084 0084 0084 0084 0084 0084 0084 0024 00a1
 00a5 0021 8021 0021 00a0 0024 00a0 0024 00a0 0024 00a0 0024 0021 00a1
 00a5 0021 8021 0021 0021 0021 0021 0021 0021 0021 0021 0021 0021 00a1
 00a5 0021 8021 0021 0021 0021 0021 0021 0021 0021 0021 0021 0021 00a1
 00a5 0021 8021 0021 0021 0021 0021 0021 0021 0021 0021 0021 0021 00a1
 00a5 0001 8021 0021 0021 0021 0021 0021 0021 0021 0021 0021 0021 00a1
 00a5 8280 8005 0081 0005 0081 0005 0081 0005 0081 0005 0001 0201 00a1
 00a5 00a5 00a5 00a5 00a5 00a5 00a5 00a5 00a5 00a5 00a5 00a5 00a5 00a5

 0085 0085 0085 0085 0085 0085 0085 0085 0085 0085 0085 0085 0085 00a5
 00a5 00a0 0024 00a0 0024 00a0 0024 00a0 0024 00a0 0024 00a0 0024 00a1
 00a5 0021 0021 0021 0021 0021 0021 0021 0021 0021 0021 0021 0021 00a1
 00a5 0021 0021 0021 0021 0021 0021 0021 0021 0021 0021 0021 0021 00a1
 00a5 0021 0021 0021 0021 0021 0021 0021 0021 0021 0021 0021 0021 00a1
 00a5 0021 0021 0021 0021 0021 0021 0021 0021 0021 0021 0021 0021 00a1
 00a5 0021 0021 0021 0021 0021 0021 0021 0021 0021 0021 0021 0021 00a1
 00a5 8211 0081 0005 0081 0005 0081 0005 0081 0005 0081 0005 0011 00a1
 00a5 00a5 00a5 00a5 00a5 00a5 00a5 00a5 00a5 00a5 00a5 00a5 00a5 00a5

 0085 0085 0085 0085 0085 0085 0085 0085 0085 0085 0085 0085 0085 00a5
 00a5 80a0 8024 80a0 8024 80a0 8024 80a0 8024 80a0 8024 80a0 8024 00a1
 00a5 8021 8021 8021 8021 8021 8021 8021 8021 8021 8021 8021 8021 00a1
 00a5 8021 8021 8021 8021 8021 8021 8021 8021 8021 8021 8021 8021 00a1
 00a5 8021 8021 8021 8021 8021 8021 8021 8021 8021 8021 8021 8021 00a1
 00a5 8021 8021 8021 8021 8021 8021 8021 8021 8021 8021 8021 8021 00a1
 00a5 8021 8021 8021 8021 8021 8021 8021 8021 8021 8021 8021 8021 00a1
 00a5 8011 8081 8005 8081 8005 8081 8005 8081 8005 8081 8005 8021 00a1
 00a5 00a5 00a5 00a5 00a5 00a5 00a5 00a5 00a5 00a5 00a5 00a5 00a5 00a5
);

my $minos = Games::Maze->new(
		dimensions => [12, 7, 3],
		entry => [1,1,1], exit => [12,7,3],
		start => [1,6,1], fn_choosedir => \&first_dir
		);

$minos->make();
my $maze_form = $minos->to_ascii();
print +($maze_form ne $correct_make)? "not ok 2\n": "ok 2\n";

$minos->solve();
$maze_form = $minos->to_ascii();
print +($maze_form ne $correct_solve)? "not ok 3\n": "ok 3\n";

$maze_form = $minos->to_hex_dump();
print +($maze_form ne $correct_hex)? "not ok 4\n": "ok 4\n";

$minos->unsolve();
$maze_form = $minos->to_ascii();
print +($maze_form ne $correct_make)? "not ok 5\n": "ok 5\n";

exit(0);

sub first_dir
{
	return ${$_[0]}[0];
}
